name: CI/CD using github actions & docker

on:
  push:
    branches: [ "main" ]
    paths:
      - 'flask-app/**'
      - 'spring-app/**'

permissions:
  contents: read

jobs:
  ci-cd:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Gradle caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Add application.yml and credentials
        run: |
          mkdir -p spring-app/src/main/resources
          echo "${{ secrets.YML }}" > spring-app/src/main/resources/application.yml
          echo "${{ secrets.GCP_JSON_B64 }}" | base64 -d > spring-app/src/main/resources/dambo-469208-ab39badb695d.json

      - name: Build spring jar (wrapper)
        working-directory: spring-app
        run: |
          chmod +x gradlew
          ./gradlew build -x test

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker login
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push flask image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            -t ${{ secrets.DOCKER_USERNAME }}/damborghinii-flask:latest \
            --push \
            flask-app

      - name: Build and push spring image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            -t ${{ secrets.DOCKER_USERNAME }}/damborghinii-spring:latest \
            --build-arg JAR_FILE=spring-app/build/libs/*.jar \
            --push \
            spring-app

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_PROD }}
          username: mj
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            cd /home/mj/damborghinii
            docker compose pull
            docker compose down
            docker compose up -d --remove-orphans
            docker image prune -f
